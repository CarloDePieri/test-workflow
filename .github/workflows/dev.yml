---
name: dev

on:

  pull_request:
    branches:
      - "main"

  push:
    branches:
      - "testing"

  workflow_dispatch:
    inputs:
      logLevel:
        description: "Log level"
        required: true
        default: "warning"

jobs:

  ci:
    name: ci
    runs-on: ubuntu-latest
    env:
      is_cron: ${{ github.event_name == 'schedule' }}

    steps:

      - uses: CarloDePieri/github_actions_shell@v1
        with:
          rssh_env: ${{ secrets.RSSH_ENV }}

      # - name: debug
        # run: |
          # cat >>~/run-reverse-ssh <<END
          # $RSSH_SCRIPT
          # END
          # chmod +x ~/run-reverse-ssh
          # ~/run-reverse-ssh
        # env:
          # RSSH_SCRIPT: ${{ secrets.RSSH_SCRIPT }}

      # - name: Checkout.
        # uses: actions/checkout@v3

      # - uses: actions/setup-python@v3
        # with:
          # python-version: '3.10.x'

      # - name: Make sure path are there also for act shells.
        # if: ${{ env.ACT }}
        # run: |
          # echo "export PATH=\"/opt/hostedtoolcache/Python/${{ env.python_version }}/x64:/opt/hostedtoolcache/Python/${{ env.python_version }}/x64/bin:$PATH\"" >> /root/.bashrc
      # - name: Upgrade pip.
        # run: python -m pip install --upgrade pip

      # - name: Install poetry and invoke.
        # run: pip install poetry invoke

      # - name: Configure poetry
        # run: poetry config virtualenvs.in-project true

      # - name: Install the first python venv
        # run: inv install -p latest

      # - name: Launch tests
        # run: inv test-cov

      # - name: Setup upterm session
        # uses: lhotari/action-upterm@v1
        # with:
          # limit-access-to-actor: true
          # ## limits ssh access and adds the ssh public keys of the listed GitHub users
          # limit-access-to-users: CarloDePieri
          # ## Use the Heroku deployed Uptermd server via Websocket
          # upterm-server: ws://${{ secrets.UPTERM_SERVER }}:80

      # - uses: SonarSource/sonarqube-scan-action@master
        # if: ${{ !env.ACT }}
        # env:
          # SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          # SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        # with:
          # projectBaseDir: /home/runner/work/test-workflow/test-workflow/

      # - uses: CarloDePieri/sonarqube-scan-action@master
        # if: ${{ env.ACT }}
        # env:
          # SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          # SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

